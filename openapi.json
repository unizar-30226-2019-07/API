{
  "swagger": "2.0",
  "schemes": [
    "http",
    "https"
  ],
  "host": "api.selit.ml",
  "basePath": "/v1",
  "info": {
    "description": "[**Selit! API**](http://api.selit.ml) es una interfaz basada en HTTP, creada \npara los desarrolladores que deseen construir nuevas interfaces de \naplicación al portal [Selit!](http://selit.ml).\n\n# Introducción\nEsta API está documentada en **formato OpenAPI**. Además de la sintaxis\nestándar de OpenAPI se usa un [repertorio extendido](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).\n\nLa API se estructura en torno a los recursos disponibles dentro de la \napliación Selit!. La interacción con dichos recursos se realiza a través de \npeticiones HTTP. Cada operación sobre un recurso puede requerir un nivel de \nautenticación diferente.\n\n## Recursos\nLos recursos de la API se pueden clasificar según su comportamiento en \ncuatro grupos.\n\n| Nombre      | Comentario |\n| ----------- | ---------- |\n| Documento   | Representación de un objeto o insta por el servidor. |\n| Colección   | Conjunto de documentos manejado por el servidor. |\n| Almacén     | Directorio de documentos manejado por el cliente. |\n| Controlador | Procedimiento asociado a un documento. |\n    \nLos **Documentos** pueden contener **Colecciones**, así como **Almacenes**,\ncomo parte de sus atributos. Cada **Documento** tiene asociado un \nidentificador único dentro de las **Colecciones** o **Alamacenes** a los \nque pertenezca.\n    \nLos principales recursos de tipo **Documento** son los siguientes.\n\n| Recurso | Descripción |\n| ------- | ----------- | \n| Usuario | Toda persona registrada en la aplicación. | \n| Anuncio | Venta de un objeto mediante compra directa. |\n| Subasta | Venta de un objeto mediante pujas incrementales. |\n| Chat    | Conversación entre dos usuarios en referencia a un anuncio. |\n\n## Operaciones\nLas operaciones sobre los recursos se realizan mediante peticiones HTTP. \nLa semántica de cada petición varía en función del tipo de recurso.\n\n| Petición | Recurso     | Descripción |\n| -------- | ----------- | ----------- |\n| GET      | Documento   | Obtener la inforación asociada a la instancia. |\n| GET      | Colección   | Lista de objetos que pertenecen al recurso. |\n| GET      | Almacén     | Lista de objetos que han sido añadidos al recurso. |\n| HEAD     | Documento   | Comprueba la existencia de un recurso. |\n| PUT      | Documento   | Inserta o actualiza un documento (o parte de un documento). |\n| POST     | Colección   | Crea un nuevo recurso en la colección. |\n| POST     | Controlador | Ejecuta el comportamiento asociado al procedimiento. |\n| DELETE   | Documento   | Elimina el recurso de su padre. |\n| OPTIONS  | *Todos*     | Devuelve la lista de posibles operaciones sobre el recurso. |\n\n## Códigos de respuesta\n\nLas operaciones con recursos pueden ocasionar errores que serán transmitidos\nen la respuesta a la petición HTTP.\n\n### Códigos de éxito\n\n| Código | Nombre            | Descripción |\n| ------ | ----------------- | ----------- |\n| 200    | OK                | Indica éxito genérico en la operación. |\n| 201    | Created           | Indica que un nuevo recurso ha sido creado (p. ej. en colecciones o almacenes). |\n| 202    | Accepted          | Indica el inicio una acción asíncrona (p. ej. en controladores). |\n| 204    | No Content        | Indica que el cuerpo de la respuesta está vacío de forma intencionada. |\n| 301    | Moved Permanently | Indica que la URI solicitada ya no corresponde con el recurso solicitado. |\n\n### Códigos de fracaso\n\n| Código | Nombre                | Descripción |\n| ------ | --------------------- | ----------- |\n| 400    | Bad Request           | Indica un error genérico en la operación. |\n| 401    | Unauthorized          | Indica que los credenciales de usuario son incorrectos o no han sido enviados. |\n| 402    | Forbidden             | Indica que el usuario identificado no tiene permiso para realizar la operación. |\n| 404    | Not Found             | Indica que no se encontró el recurso asociado con la URI. |\n| 405    | Method Not Allowed    | Indica que el método HTTP (petición) no es válido sobre dicho recurso. |\n| 409    | Conflict              | Indica que la operación ha sido rechazada porque violaba restricciones del estado del recurso. |\n| 412    | Precondition Failed   | Indica incumplimiento de una de las precondiciones de la operación. |\n| 415    | Unsupported Media     | Indica que el formato multimedia no es soportado por el servidor. |\n| 500    | Internal Server Error | Indica que el servidor de la API está teniendo problemas ajenos a la petición. |\n\nLa mayoría de los códigos de error irán acompañados de una explicación más \ndetallada en el cuerpo de la respuesta.\n\n# Autenticación\nSelit! API ofrece los siguientes métodos de autenticación:\n  - JWT\n\n<security-definitions/> \n",
    "version": "1.0.0",
    "title": "Selit! API",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/unizar-30226-2019-07/API"
    },
    "x-logo": {
      "url": "https://i.imgur.com/UTVJLgd.png",
      "altText": "Selit logo"
    },
    "license": {
      "name": "MIT License",
      "url": "https://raw.githubusercontent.com/unizar-30226-2019-07/API/master/LICENSE"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "login",
      "description": "Gestion de sesiones de usuario"
    },
    {
      "name": "users",
      "description": "Gestión de cuentas de usuario"
    },
    {
      "name": "products",
      "description": "Gestión de productos"
    },
    {
      "name": "chats",
      "description": "Gestión de mensajes"
    }
  ],
  "x-tagGroups": [
    {
      "name": "General",
      "tags": [
        "default"
      ]
    },
    {
      "name": "Usuarios",
      "tags": [
        "users"
      ]
    },
    {
      "name": "Productos",
      "tags": [
        "products"
      ]
    },
    {
      "name": "Chat",
      "tags": [
        "chats"
      ]
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Obtener lista de Usuarios",
        "description": "Carga una lista con todos los usuarios registrados en la aplicación que cumplen las condiciones.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Correo electrónico del usuario.",
            "x-example": "johndoe@example.com"
          },
          {
            "name": "$size",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Tamaño de la página.",
            "minimum": 1,
            "x-example": 10
          },
          {
            "name": "$page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Número de página.",
            "minimum": 1,
            "x-example": 1
          },
          {
            "name": "$sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Atributo(s) por los que ordenar.",
            "x-example": "birth_date DESC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Usuario"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Crear nuevo Usuario",
        "description": "Añade un Usuario a la aplicación",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Usuario"
            },
            "x-examples": {
              "application/json": {
                "email": "johndoe@example.com",
                "first_name": "John",
                "password": "1234abcd"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Nuevo usuario creado"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Obtener un Usuario",
        "description": "Carga la información de un Usuario.",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "404": {
            "description": "No encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "description": "The user [user_id] does not exist.",
                "reasonPhrase": "Not Found"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Actualizar un Usuario",
        "description": "Modificar la información de un usuario preexistente.",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "description": "The user [user_id] does not exist.",
                "reasonPhrase": "Not Found"
              }
            }
          },
          "409": {
            "description": "Conflicto",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 409,
                "description": "The email [email] already exist.",
                "reasonPhrase": "Conflict"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Eliminar un Usuario",
        "description": "Elimina la información de un usuario de la base de datos.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 404,
                "description": "The user [user_id] does not exist.",
                "reasonPhrase": "Not Found"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{user_id}/change_password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Cambiar contraseña",
        "parameters": [
          {
            "name": "old",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Contraseña actual",
            "x-example": "1234abcd"
          },
          {
            "name": "new",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Nueva contraseña",
            "x-example": "5678efgh"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondición fallida",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "code": 412,
                "description": "Wrong [old] password",
                "reasonPhrase": "Precondition Failed"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "description": "Código HTTP de error",
          "minimum": 400,
          "maximum": 599
        },
        "description": {
          "type": "string",
          "description": "Descripción detallada del error",
          "example": "Bad query parameter [$size]: Invalid integer value [abc]"
        },
        "reasonPhrase": {
          "type": "string",
          "description": "Nombre del código de estado HTTP",
          "example": "Bad Request"
        }
      },
      "description": "Estructura general de los errores de la API",
      "example": {
        "code": 400,
        "description": "Bad query parameter [$size]: Invalid integer value [abc]",
        "reasonPhrase": "Bad Request"
      }
    },
    "Imagen": {
      "type": "object",
      "required": [
        "base64",
        "mime"
      ],
      "properties": {
        "mime": {
          "type": "string",
          "description": "Tipo de dato MIME",
          "enum": [
            "image/bmp",
            "image/jpeg",
            "image/gif",
            "image/png",
            "image/svg+xml",
            "image/tiff"
          ]
        },
        "charset": {
          "type": "string",
          "description": "Conjunto de caracteres",
          "default": "utf-8"
        },
        "base64": {
          "type": "string",
          "description": "Datos en base 64",
          "example": "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"
        }
      },
      "description": "Archivo multimedia de imagen.",
      "example": {
        "mime": "image/gif",
        "charset": "utf-8",
        "base64": "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"
      }
    },
    "Localizacion": {
      "type": "object",
      "required": [
        "lat",
        "lng"
      ],
      "properties": {
        "lat": {
          "type": "number",
          "description": "Latitud",
          "minimum": -90,
          "maximum": 90,
          "example": -34.397
        },
        "lng": {
          "type": "number",
          "description": "Longitud",
          "minimum": -180,
          "maximum": 180,
          "example": 150.644
        }
      },
      "description": "Ubicación geográfica.",
      "example": {
        "lat": -34.397,
        "lng": 150.644
      }
    },
    "Usuario": {
      "type": "object",
      "required": [
        "email",
        "first_name",
        "id",
        "rating",
        "status"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Identificador único",
          "minimum": 1
        },
        "email": {
          "type": "string",
          "description": "Correo electrónico",
          "maxLength": 254,
          "pattern": "[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*",
          "example": "johndoe@example.com"
        },
        "status": {
          "type": "string",
          "description": "Estado de la cuenta",
          "enum": [
            "active",
            "inactive",
            "pending"
          ]
        },
        "first_name": {
          "type": "string",
          "description": "Nombre de pila"
        },
        "last_name": {
          "type": "string",
          "description": "Apellido(s)"
        },
        "gender": {
          "type": "string",
          "description": "Género",
          "enum": [
            "male",
            "female",
            "other"
          ]
        },
        "birth_date": {
          "type": "string",
          "format": "date",
          "description": "Fecha de nacimiento",
          "example": "1970-01-01"
        },
        "location": {
          "$ref": "#/definitions/Localizacion"
        },
        "rating": {
          "type": "number",
          "description": "Valoración",
          "minimum": 0,
          "maximum": 5,
          "example": 2.75
        },
        "picture": {
          "$ref": "#/definitions/Imagen"
        }
      },
      "description": "Representación de un Usuario.",
      "example": {
        "id": 345,
        "email": "johndoe@example.com",
        "status": "active",
        "first_name": "John",
        "last_name": "Doe",
        "gender": "male",
        "birth_date": "1970-01-01",
        "location": {
          "lat": -34.397,
          "lng": 150.644
        },
        "rating": 2.5,
        "picture": {
          "mime": "image/gif",
          "charset": "utf-8",
          "base64": "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"
        }
      }
    }
  }
}
